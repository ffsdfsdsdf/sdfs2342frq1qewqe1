import telebot
import config
from random import*
from telebot import types

def RunBot():
	try:

		bot = telebot.TeleBot(config.TOKEN)

		#messages.getAllStickers   markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
		   # item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
		   # item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
		 #
		   # markup.add(item1, item2)
		   #markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

			#item1 = types.KeyboardButton("–†–∞–Ω–¥–æ–º–Ω–æ–µ –ß–∏—Å–ª–æ")
			#item2 = types.KeyboardButton("–∫–∞–∫ –¥–µ–ª–∞")
			

			#markup.add(item1, item) stickers
			#bot.send_message(message.chat.id, "üòï–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±–∏—Ç—å —Ç–µ–±–µ –µ–±–∞–ª–æü§Ø.\n –•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ —è –º–æ–≥—É? - –≤–≤–µ–¥–∏ /–∫–æ–º–∞–Ω–¥—ã".format(message.from_user, bot.get_me()),
		       #parse_mode='html', reply_markup=markup)



		@bot.message_handler(commands=['start'])
		def Start(message):
			bot.send_message(message.chat.id, "üòï–†–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±–∏—Ç—å —Ç–µ–±–µ –µ–±–∞–ª–æü§Ø.\n–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ —è –º–æ–≥—É? - –≤–≤–µ–¥–∏ /–∫–æ–º–∞–Ω–¥—ã".format(message.from_user, bot.get_me()),
				parse_mode='html')

			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

			item1 = types.KeyboardButton("/–∫–æ–º–∞–Ω–¥—ã ‚≠êÔ∏è")

			markup.add(item1) 

			stick = open('stickers/sticker.webp', 'rb')
			bot.send_sticker(message.chat.id, stick)

			bot.send_message(message.chat.id, "–ß—Ç–æ–∂, –º–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å..".format(message.from_user, bot.get_me()),
				parse_mode='html', reply_markup=markup)
		    

		@bot.message_handler(commands=['–∫–æ–º–∞–Ω–¥—ã'])
		def CMD(message):
			markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

			item1 = types.KeyboardButton("/–∞–Ω–µ–∫–¥–æ—Ç ü§™")
			item2 = types.KeyboardButton("/–ª–æ—Ö üò°")
			item3 = types.KeyboardButton("/–∫—É—Ä—Å üíµ")
			item4 = types.KeyboardButton("/–¥–∞/–Ω–µ—Ç –≠—Ç–æ—Ç –±–æ—Ç –∫—Ä—É—Ç–æ–π? üçè")
			item5 = types.KeyboardButton("/–ø–æ—Ä–Ω–æ üí¶")
			item6 = types.KeyboardButton("/–∞–≤–∞ ü§©")
			item7 = types.KeyboardButton("/–ø–æ–≥–æ–¥–∞ ‚ùÑÔ∏è")
			item8 = types.KeyboardButton("/–º–∞—Ç ü§¨")
			item9 = types.KeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–øüîÆ")
			
			

			markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9) 

			bot.send_message(message.chat.id, "–ï–±–∞–Ω—É—à–∫–∞, –¥–µ—Ä–∂–∏ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥üòê".format(message.from_user, bot.get_me()),
				parse_mode='html', reply_markup=markup)

			


		@bot.message_handler(commands=['–∫—É—Ä—Å'])
		def Dollar(message):
			import requests
			from bs4 import BeautifulSoup
			import time

			bet = "https://www.google.com/search?q=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0&source=hp&ei=iWR4YJ_BNOiEwPAPgvS22AY&iflsig=AINFCbYAAAAAYHhymSH12pyG_nMC56JgECoKoUGFal1u&oq=%D0%BA%D1%83%D1%80%D1%81+%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80%D0%B0&gs_lcp=Cgdnd3Mtd2l6EAMyDQgAELEDEIMBEEYQggIyCAgAELEDEIMBMggIABCxAxCDATICCAAyCAgAELEDEIMBMggIABCxAxCDATIICAAQsQMQgwEyCAgAELEDEIMBMgUIABCxAzIICAAQsQMQgwE6CAguELEDEIMBUIUYWLcnYMEoaAFwAHgAgAF5iAH_BpIBBDExLjGYAQCgAQGqAQdnd3Mtd2l6sAEA&sclient=gws-wiz&ved=0ahUKEwjfqeLg0IDwAhVoAhAIHQK6DWsQ4dUDCAc&uact=5"
			headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"}

			
			full_page = requests.get(bet, headers=headers)


			soup = BeautifulSoup(full_page.content, "html.parser")

			Dollar = soup.findAll("span", {"class": "DFlfde SwHCTb"})


			bot.send_message(message.chat.id, "–ö—É—Ä—Å –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: " + str(Dollar[0].text) + " üíµ")

		@bot.message_handler(commands=['–∞–Ω–µ–∫–¥–æ—Ç']) #http://anekdotov.net/anekdot/index-page-22.html
		def Anekdot(message):
			import requests
			from bs4 import BeautifulSoup
			



			site = "https://www.anekdot.ru/release/anekdot/week/"
			
			headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"}

			
			full_page = requests.get(site, headers=headers)


			soup = BeautifulSoup(full_page.content, "html.parser")

			randomintForAnekdot = randint(1,60)

			Anekdot = soup.findAll("div", {"class": "topicbox", "id": randomintForAnekdot})



			bot.send_message(message.chat.id, "–ê–Ω–µ–∫–¥–æ—Çü§™:")

			try:
				bot.send_message(message.chat.id, Anekdot[0])
			except:
				print("–û–ø—è—Ç—å —ç—Ç–æ—Ç –∞–Ω–µ–∫–¥–æ—Ç...")
				bot.send_message(message.chat.id, "–£–ø—Å, –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ–∂–ª–∞ –æ—à–∏–±–∫–∞üåà\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µüî´")



		#@bot.message_handler(content_types=['text'])
		#def message(message):
			#bot.send_message(message.chat.id, config.Balance + " üê∫")
		@bot.message_handler(commands=['–¥–∞/–Ω–µ—Ç'])
		def TrueOrFalse(message):
			if(message.text == "/–¥–∞/–Ω–µ—Ç"):
				bot.send_message(message.chat.id, "–ù–µ –±—ã–ª–æ —É–∫–∞–∑–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µüç∫")
			else:
				randomintTrueOrFalse = randint(1,2)
				if(randomintTrueOrFalse == 1):
					bot.send_message(message.chat.id, "–î–∞‚úÖ")
				else:
					bot.send_message(message.chat.id, "–ù–µ—Ç‚õîÔ∏è")


		@bot.message_handler(commands=['–ø–æ—Ä–Ω–æ'])
		def Porn(message):
			
			stick = open('NackedSticks/'+ str(randint(1,10)) +'.webp', 'rb')
			bot.send_sticker(message.chat.id, stick)
			bot.send_message(message.chat.id, "–£—Ñ—Ñüí¶")


		@bot.message_handler(commands=['–∞–≤–∞'])
		def Avatarka(message):
			from PIL import Image
			
			Photo = open('avatars/' + str(randint(1,26)) + '.jpg', 'rb')
			bot.send_message(message.chat.id, "–ê–≤–∞—Ç–∞—Ä–æ—á–∫–∞ü§úüèªü§õüèª:")
			bot.send_photo(message.chat.id, Photo)


		@bot.message_handler(commands=['–ª–æ—Ö'])
		def Lox(message):	
			bot.send_message(message.chat.id, "–ö–ª–æ—É–Ω –µ–±–∞–Ω—ã–πüå∑")


		@bot.message_handler(commands=['–º–∞—Ç'])
		def Mat(message):
			import requests
			from bs4 import BeautifulSoup

			site = "http://www.russki-mat.net/e/mat_slovar.htm"
			
			headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"}

			
			full_page = requests.get(site, headers=headers)


			soup = BeautifulSoup(full_page.content, "html.parser")

			randomintMat = randint(1,60)


			Mat = soup.findAll("p", {"class": "art"})

			try:
				bot.send_message(message.chat.id, Mat[int(randomintMat)].text)
			except:
				bot.send_message(message.chat.id, "–£–ø—Å, –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ–∂–ª–∞ –æ—à–∏–±–∫–∞üåà\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µüî´")
				print("–º–∞—Ç..")
			

		@bot.message_handler(commands=['–ø–æ–≥–æ–¥–∞'])
		def Weather(message):
			import requests
			from bs4 import BeautifulSoup

			site = "https://www.gismeteo.ru/weather-velikiye-luki-4144/now/"
			
			headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"}

			
			full_page = requests.get(site, headers=headers)


			soup = BeautifulSoup(full_page.content, "html.parser")

			randomintForAnekdot = randint(1,60)


			Weather = soup.findAll("div", {"class": "now__weather"})
			WeatherS = soup.findAll("div", {"class": "now__astro nowastro"})
			Osadki = soup.findAll("div", {"class": "now__desc"})
		#https://time100.ru/Velikie-Luky

			TimeSite = "https://www.google.ru/search?q=%D0%B2%D0%B5%D1%80%D0%BC%D1%8F&newwindow=1&source=hp&ei=Gg97YMDVIvKjgweNlpioAQ&iflsig=AINFCbYAAAAAYHsdKpXqUk_w1NM1OKH2rw-eOpiWLgtj&oq=%D0%B2%D0%B5%D1%80%D0%BC%D1%8F&gs_lcp=Cgdnd3Mtd2l6EAMyBwgAELEDEAoyBAgAEAoyBwgAELEDEAoyDQgAELEDEIMBEMkDEAoyBQgAEJIDMgUIABCSAzIICAAQsQMQgwEyCgguELEDEIMBEAoyBAgAEAoyBwguELEDEAo6DggAELEDEIMBEMcBEKMCOgUIABCxAzoICAAQxwEQrwE6AgguOgIIADoFCC4QkwI6CAgAEMcBEKMCOggILhCxAxCDAToFCC4QsQM6CAguELEDEJMCOggIABCxAxDJA1DBBljVC2CrDWgAcAB4AIABVIgBhgOSAQE1mAEAoAEBqgEHZ3dzLXdpeg&sclient=gws-wiz&ved=0ahUKEwjAytzZ24XwAhXy0eAKHQ0LBhUQ4dUDCAc&uact=5"

			
			full_page = requests.get(TimeSite, headers=headers)


			soup = BeautifulSoup(full_page.content, "html.parser")


			Time = soup.findAll("div", {"class": "gsrt vk_bk dDoNo FzvWSb XcVN5d DjWnwf"})
			Data = soup.findAll("div", {"class": "vk_gy vk_sh"})

			try:
				bot.send_message(message.chat.id, Time[0].text + ", –í–µ–ª–∏–∫–∏–µ –õ—É–∫–∏ (–ú–°–ö)\n" + Data[0].text + "\n" +"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ —É–ª–∏—Ü–µ: " + str(Weather[0].text)+ "‚òÄÔ∏è" + "\n" + "–û—Å–∞–¥–∫–∏: " + Osadki[0].text + "üå®")
			except:
				print("–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–≥–æ–¥–æ–π..")
				bot.send_message(message.chat.id, "–£–ø—Å, –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–∏–∑–æ–∂–ª–∞ –æ—à–∏–±–∫–∞üåà\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µüî´")

		@bot.message_handler(content_types=['text'])
		def get_text_messages(message):
			if message.text == "–ì–æ—Ä–æ—Å–∫–æ–øüîÆ":


				markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

				item1 = types.KeyboardButton("–õ–µ–≤ ü¶Å")
				item2 = types.KeyboardButton("–ù–∞–∑–∞–¥ ‚óÄÔ∏è")


				markup.add(item1, item2) 

				bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∑–Ω–∞–∫ –¥–ª—è –≥–æ—Ä–æ—Å–∫–æ–ø–∞:".format(message.from_user, bot.get_me()),
					parse_mode='html', reply_markup=markup)
			if message.text == "–õ–µ–≤ ü¶Å":
				import requests
				from bs4 import BeautifulSoup
				import time

				Goroskop = "https://horo.mail.ru/prediction/leo/today/"
				headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36"}

				
				full_page = requests.get(Goroskop, headers=headers)


				soup = BeautifulSoup(full_page.content, "html.parser")

				Predskazanie = soup.findAll("div", {"class": "article__item article__item_alignment_left article__item_html"})
				Other = soup.findAll("div", {"class": "p-score-day__item__value"})
				Other2 = soup.findAll("div", {"class": "p-score-day__item__text"})
				


				bot.send_message(message.chat.id, "–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—èüîÆ\n " + str(Predskazanie[0].text) + " ü¶Å\n" + Other2[0].text + ": " + Other[0].text + "üßë‚Äçüíª\n" +
					Other2[1].text + ": " + Other[1].text + "‚ù§Ô∏è\n" + Other2[2].text + ": " + Other[2].text + "üëæ\n" + Other2[3].text + ": " + Other[3].text + "üôå")

			if message.text == "–ù–∞–∑–∞–¥ ‚óÄÔ∏è":
				markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

				item1 = types.KeyboardButton("/–∞–Ω–µ–∫–¥–æ—Ç ü§™")
				item2 = types.KeyboardButton("/–ª–æ—Ö üò°")
				item3 = types.KeyboardButton("/–∫—É—Ä—Å üíµ")
				item4 = types.KeyboardButton("/–¥–∞/–Ω–µ—Ç –≠—Ç–æ—Ç –±–æ—Ç –∫—Ä—É—Ç–æ–π? üçè")
				item5 = types.KeyboardButton("/–ø–æ—Ä–Ω–æ üí¶")
				item6 = types.KeyboardButton("/–∞–≤–∞ ü§©")
				item7 = types.KeyboardButton("/–ø–æ–≥–æ–¥–∞ ‚ùÑÔ∏è")
				item8 = types.KeyboardButton("/–º–∞—Ç ü§¨")
				item9 = types.KeyboardButton("–ì–æ—Ä–æ—Å–∫–æ–øüîÆ")

				
				

				markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9) 

				bot.send_message(message.chat.id, "–ù—É, –Ω–∞–∑–∞–¥ —Ç–∞–∫ –Ω–∞–∑–∞–¥‚óÄÔ∏è".format(message.from_user, bot.get_me()),
					parse_mode='html', reply_markup=markup)


		bot.polling(none_stop=True)
	except:
		RunBot()
	RunBot()
RunBot()


